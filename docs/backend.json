
{
  "entities": {
    "Store": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Store",
      "type": "object",
      "description": "Represents a seller's online storefront.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the store."
        },
        "sellerId": {
          "type": "string",
          "description": "Reference to the Seller who owns this store. (Relationship: Seller 1:N Store)"
        },
        "name": {
          "type": "string",
          "description": "The name of the store."
        },
        "subdomain": {
          "type": "string",
          "description": "The unique subdomain for the store (e.g., username.platform.com)."
        },
        "logoUrl": {
          "type": "string",
          "description": "URL of the store's logo image.",
          "format": "uri"
        },
        "brandColor": {
          "type": "string",
          "description": "The store's primary brand color (e.g., hex code)."
        },
        "coverImageUrl": {
          "type": "string",
          "description": "URL of the store's cover image.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "sellerId",
        "name",
        "subdomain"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product sold in a store.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "storeId": {
          "type": "string",
          "description": "Reference to the Store this product belongs to. (Relationship: Store 1:N Product)"
        },
        "name": {
          "type": "string",
          "description": "The name of the product."
        },
        "description": {
          "type": "string",
          "description": "The product's description."
        },
        "price": {
          "type": "number",
          "description": "The price of the product."
        },
        "category": {
          "type": "string",
          "description": "The category of the product."
        },
        "stock": {
          "type": "number",
          "description": "The number of units of this product in stock."
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "required": [
        "id",
        "storeId",
        "name",
        "description",
        "price",
        "category",
        "stock"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed by a customer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "storeId": {
          "type": "string",
          "description": "Reference to the Store where the order was placed. (Relationship: Store 1:N Order)"
        },
        "customerId": {
          "type": "string",
          "description": "Reference to the Customer who placed the order. (Relationship: Customer 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "The date and time when the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "The total amount of the order."
        },
        "paymentProofUrl": {
          "type": "string",
          "description": "URL of the payment proof uploaded by the customer.",
          "format": "uri"
        },
        "status": {
          "type": "string",
          "description": "The status of the order (e.g., pending, confirmed, fulfilled)."
        }
      },
      "required": [
        "id",
        "storeId",
        "customerId",
        "orderDate",
        "totalAmount",
        "status"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents an item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order item."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to the Order this item belongs to. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to the Product that was ordered. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the product ordered."
        },
        "price": {
          "type": "number",
          "description": "The price of the product at the time of the order."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "price"
      ]
    },
    "SubscriptionPlan": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SubscriptionPlan",
      "type": "object",
      "description": "Represents a subscription plan for sellers.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the subscription plan."
        },
        "name": {
          "type": "string",
          "description": "The name of the subscription plan (e.g., Free, Pro)."
        },
        "productLimit": {
          "type": "number",
          "description": "The maximum number of products allowed in this plan."
        },
        "price": {
          "type": "number",
          "description": "The price of the subscription plan."
        },
        "enhancedAnalytics": {
          "type": "boolean",
          "description": "Indicates whether enhanced analytics are included in this plan."
        },
        "whatsappNotifications": {
          "type": "boolean",
          "description": "Indicates whether WhatsApp notifications are included in this plan."
        }
      },
      "required": [
        "id",
        "name",
        "productLimit",
        "price"
      ]
    },
    "SellerSubscription": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SellerSubscription",
      "type": "object",
      "description": "Represents a seller's subscription to a plan.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the seller's subscription."
        },
        "sellerId": {
          "type": "string",
          "description": "Reference to the Seller who owns the subscription. (Relationship: Seller 1:N SellerSubscription)"
        },
        "subscriptionPlanId": {
          "type": "string",
          "description": "Reference to the SubscriptionPlan being used. (Relationship: SubscriptionPlan 1:N SellerSubscription)"
        },
        "startDate": {
          "type": "string",
          "description": "The date and time when the subscription started.",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "description": "The date and time when the subscription ends.",
          "format": "date-time"
        },
        "paymentLink": {
          "type": "string",
          "description": "Link for subscription payments.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "sellerId",
        "subscriptionPlanId",
        "startDate",
        "endDate"
      ]
    },
    "Seller": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Seller",
      "type": "object",
      "description": "Represents a seller using the platform. This document stores public and private information about the seller.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The Firebase Auth UID of the seller."
        },
        "email": {
          "type": "string",
          "description": "The seller's email address.",
          "format": "email"
        },
        "businessName": {
          "type": "string",
          "description": "The seller's business name."
        },
        "storeId": {
          "type": "string",
          "description": "The URL-friendly slug for the store."
        },
        "createdAt": {
            "type": "string",
            "format": "date-time"
        }
      },
      "required": [
        "uid",
        "email",
        "businessName",
        "storeId",
        "createdAt"
      ]
    },
    "Customer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Customer",
      "type": "object",
      "description": "Represents a customer placing orders. Authentication data is assumed to be handled externally.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the customer."
        },
        "email": {
          "type": "string",
          "description": "The customer's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The customer's name."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/Seller"
      },
      "description": "Stores seller profile information. The document ID `userId` must match the authenticated user's UID."
    },
    "/products/{productId}": {
        "schema": {
            "$ref": "#/entities/Product"
        },
        "description": "Stores all products for all stores."
    },
    "/orders/{orderId}": {
        "schema": {
            "$ref": "#/entities/Order"
        },
        "description": "Stores all orders for all stores."
    }
  }
}

    